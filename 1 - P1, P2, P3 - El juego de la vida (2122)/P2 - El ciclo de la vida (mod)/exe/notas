// muerta -> huevo si (vecinos adulta 2+) else muerta
// huevo -> muerta si (vecinas larva > huevos) else larva
// larva -> muerta si (vecinas larva > huevos+pupas+adultas) else pupa
// pupa -> muerta si (vecinas  larva > huevos|pupas|adultas) else adulta
// adulta -> huevo si (vecinas adulta 1+) else muerta
//â €

    //if(adultas >= 2) _next = new StateEgg();
    //else             _next = new StateDead();

    /*if(_next->getState() != this->getState()) {
        std::cout << "\n(" << i << ", " << j << ") ";
        if(adultas >= 2) std::cout << "( adults:" << adultas << " >= 2 )? true, ";
        else std::cout << "( adults:" << adultas << " >= 2 )? fals, ";
    }*/

        /*if(_state->nextState()->getState() != _state->getState()) {
        std::cout << "transiciÃ³n: '" << _state->getState() << "' -> '" << _state->nextState()->getState() << "'";
        _transition = true;
    }*/

    //std::cout << "(" << _i << ", " << _j << ") ";
    //std::cout << "'" << _state->getState() << "' -> '" << _state->nextState()->getState() << "'" ;
    //if(_transition) std::cout << "\nupdate: '" << _state->getState() << "' -> '" << _state->nextState()->getState() << "'";

    //std::cout << " ~~> '" << _state->getState() << "'" << std::endl;